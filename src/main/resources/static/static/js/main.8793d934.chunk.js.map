{"version":3,"sources":["components/project/CreateProjectButton.js","actions/types.js","Config.js","actions/projectActions.js","components/project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/userActions.js","components/Header/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/updateProjectComponent.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Landing/Landing.js","components/User/Login.js","components/User/SignUp.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["CreateProjectButton","react_default","a","createElement","Fragment","Link","to","className","GET_ERRORS","ROOT_URL","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","concat","push","t0","type","payload","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","projectIdentifier","projectName","description","onClick","bind","React","Component","connect","_ref5","_callee5","_context5","window","confirm","delete","_x5","Dashboard","getProjects","projects","project_CreateProjectButton","map","project_ProjectItem","key","state","_ref3","_callee3","res","_context3","get","sent","_x3","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","preventDefault","newProject","nextProps","classnames","is-invalid","placeholder","message","role","errorHandler","initialState","projectTasks","projectTask","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","updateProjectComponent","_nextProps$project","match","params","getProject","updateProject","disabled","_ref4","_callee4","_context4","_x4","_ref2","_callee2","_context2","put","_x2","ProjectTask","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","backlog_id","Backlog","tasks","projectTasksProp","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","ProjectBoard_Backlog","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$projectTas","_this$props$match$par2","updateProjectTaskByProjectSequence","patch","Landing","Login","username","password","loginRequest","login","LoginRequest","decode","setItem","jwt_decode","SignUp","emailId","confirmPassword","newuser","signUp","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Header_Header","exact","path","Switch","securityUtils_SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8793d934.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst CreateProjectButton = ()=> {\r\n return(\r\n   <React.Fragment>\r\n   <Link to = \"/addProject\"  className=\"btn btn-lg btn-info\">\r\n       Create a Project\r\n   </Link>\r\n   </React.Fragment>\r\n        )\r\n\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECT = \"GET_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK=\"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\"\r\n\r\nexport const SIGN_UP = \"SIGN_UP\"\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\r\n","export const ROOT_URL = \"https://abcenterpriseppmtool.herokuapp.com\"//\"http://localhost:8080\";\r\n","import axios from 'axios';\r\nimport {GET_ERRORS} from './types';\r\nimport {GET_PROJECTS ,GET_PROJECT,DELETE_PROJECT } from './types';\r\nimport {ROOT_URL} from '../Config'\r\n\r\n\r\nexport const createProject = ( project, history ) => async dispatch => {\r\n             try{\r\n               await axios.post(`${ROOT_URL}/api/project/create/`, project)\r\n               history.push(\"/dashboard\")\r\n             }\r\n            catch(err){\r\n              dispatch({\r\n                type : GET_ERRORS,\r\n                payload : err.response.data\r\n              })\r\n            }\r\n}\r\n\r\nexport const updateProject = (project,history) => async dispatch =>{\r\n            try{\r\n                await axios.put(`${ROOT_URL}/api/project/update`, project)\r\n                history.push(\"/dashboard\")\r\n                dispatch({\r\n                    type : GET_ERRORS,\r\n                  payload : {}\r\n                  })\r\n              }\r\n               catch(err){\r\n                  dispatch({\r\n                  type : GET_ERRORS,\r\n                  payload : err.response.data\r\n             })\r\n           }\r\n  }\r\n\r\nexport const getProjects = () => async dispatch =>{\r\n         const res= await axios.get(`${ROOT_URL}/api/project/all`)\r\n         dispatch({\r\n           type : GET_PROJECTS,\r\n           payload : res.data\r\n         })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch=>{\r\n            try{\r\n              const res = await axios.get(`${ROOT_URL}/api/project/${id}`)\r\n                         dispatch({\r\n                            type : GET_PROJECT,\r\n                            payload : res.data\r\n                     })\r\n            }\r\n          catch (err) {\r\n            dispatch({\r\n              type : GET_ERRORS,\r\n              payload : err.response.data\r\n            })\r\n          }\r\n}\r\nexport const deleteProject = id => async dispatch =>{\r\n  if(window.confirm(\r\n    \"Are you sure about this because this will erase all data related to this project\"\r\n  ))\r\n  {\r\n    await axios.delete(`${ROOT_URL}/api/project/delete/${id}`)\r\n   dispatch({\r\n     type : DELETE_PROJECT,\r\n     payload : id\r\n   })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {deleteProject} from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends React.Component{\r\n\r\n  onDeleteClick = id => {\r\n           this.props.deleteProject(id);\r\n  }\r\n   render(){\r\n                 const {project} = this.props\r\n                       return (\r\n\r\n                      <div className=\"container\">\r\n                          <div className=\"card card-body bg-light mb-3\">\r\n                              <div className=\"row\">\r\n                                  <div className=\"col-2\">\r\n                                      <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                                  </div>\r\n                                  <div className=\"col-lg-6 col-md-4 col-8\">\r\n                                      <h3>{project.projectName}</h3>\r\n                                      <p>{project.description}</p>\r\n                                  </div>\r\n                                  <div className=\"col-md-4 d-none d-lg-block\">\r\n                                      <ul className=\"list-group\">\r\n                                          <Link to = {`/projectBoard/${project.projectIdentifier}`}>                                              <li className=\"list-group-item board\">\r\n                                                  <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                              </li>\r\n                                          </Link>\r\n                                          <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                              <li className=\"list-group-item update\">\r\n                                                  <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                                  </li>\r\n                                              </Link>\r\n                                              <li className=\"list-group-item delete\" onClick ={this.onDeleteClick.bind(this,\r\n                                                project.projectIdentifier)}>\r\n                                                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                              </li>\r\n                                      </ul>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n         )\r\n  }\r\n}\r\nProjectItem.propTypes ={\r\n           deleteProject : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {deleteProject}\r\n)(ProjectItem);\r\n","import React from 'react';\r\nimport CreateProjectButton from './project/CreateProjectButton'\r\nimport ProjectItem from './project/ProjectItem'\r\nimport {connect} from 'react-redux';\r\nimport {getProjects} from '../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dashboard extends React.Component {\r\n\r\ncomponentDidMount(){\r\n  this.props.getProjects();\r\n}\r\n  render(){\r\n\r\n    const {projects} = this.props.project\r\n    return(\r\n            <div className=\"projects\">\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <h1 className=\"display-4 text-center\">Projects</h1>\r\n                <br />\r\n                <CreateProjectButton/>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {\r\n                  projects.map(project =>(\r\n                      <ProjectItem  key = { project.id} project ={project}/>\r\n                      ))\r\n                }\r\n\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n);\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n            project : state.project\r\n          });\r\n  Dashboard.propTypes = {\r\n    getProjects : PropTypes.func.isRequired,\r\n    project : PropTypes.object.isRequired\r\n\r\n  }\r\n\r\nexport default connect(\r\n         mapStateToProps,\r\n        {getProjects}\r\n      )(Dashboard);\r\n","import axios from 'axios'\r\n\r\nconst setJWTToken = token =>{\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n\r\nexport default setJWTToken;\r\n","import {GET_ERRORS,SET_CURRENT_USER} from './types';\r\nimport axios from 'axios'\r\nimport {ROOT_URL} from '../Config'\r\nimport setJWTToken from '../securityUtils/setJWTToken'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const signUp = (SignUp, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${ROOT_URL}/api/users/register`, SignUp)\r\n    history.push(\"/login\")\r\n    dispatch({type: GET_ERRORS, payload: {}})\r\n  } catch (err) {\r\n    dispatch({type: GET_ERRORS, payload: err.response.data})\r\n  }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // make a login request call\r\n    const res = await axios.post(`${ROOT_URL}/api/users/login`,LoginRequest)\r\n    // Get the token from response data\r\n    const {token} = res.data;\r\n    //store the token in the local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set the token into the header componenet\r\n   setJWTToken(token)\r\n    // decode the token\r\nconst decode = jwt_decode(token)\r\n    // dispatch the payload to the reducers\r\n    dispatch({\r\n      type : SET_CURRENT_USER ,\r\n      payload : decode\r\n    })\r\n  }catch(err){\r\n    dispatch({\r\n      type : GET_ERRORS ,\r\n      payload : err.response.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/userActions\";\r\n\r\nclass Header extends React.Component {\r\n\r\n  logout(){\r\n    this.props.logout()\r\n    window.location.href = \"/\";\r\n  }\r\n\r\nrender(){\r\n  const { validToken, user } = this.props.security;\r\n     const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n         <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n     const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/signUp\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n     let headerLinks;\r\n     if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Personal Project Management Tool\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n\r\n\r\n          {headerLinks}\r\n\r\n        </div>\r\n    </nav>\r\n  );\r\n}\r\n}\r\nconst mapStateToProps = state =>({\r\n              security : state.security\r\n})\r\nHeader.propTypes = {\r\n   security : PropTypes.object.isRequired\r\n}\r\nexport default connect(\r\n  mapStateToProps,{logout}\r\n) (Header);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends React.Component{\r\n\r\n  constructor (){\r\n    super();\r\n    this.state = {\r\n             projectName: \"\",\r\n             projectIdentifier: \"\",\r\n             description: \"\",\r\n             start_date: \"\",\r\n             end_date: \"\",\r\n             errors : {}\r\n    }\r\n               this.onChange = this.onChange.bind(this);\r\n               this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n   onChange(e) {\r\n    this.setState({[e.target.name]:e.target.value});\r\n  }\r\n   onSubmit(e){\r\n      e.preventDefault();\r\n          const newProject  = {\r\n              projectName : this.state.projectName,\r\n              projectIdentifier : this.state.projectIdentifier,\r\n              description : this.state.description,\r\n              start_date : this.state.start_date,\r\n              end_date : this.state.end_date\r\n  }\r\n   this.props.createProject(newProject, this.props.history);\r\n}\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors})\r\n    }\r\n  }\r\n  render(){\r\n    const {errors} = this.state;\r\n    const errorHandler = (errors)=>{\r\n    if(errors.projectIdentifier) {\r\n      return (\r\n        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n      )}\r\n      else if(errors.message){\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                {errors.message}\r\n              </div>\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <div className=\"project\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                      <h5 className=\"display-4 text-center\">Create Project </h5>\r\n                      <hr />\r\n                      <form onSubmit = {this.onSubmit }>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"text\"\r\n                                  className={classnames(\"form-control form-control-lg \",{\r\n                                    \"is-invalid\" : errors.projectName\r\n                                  }\r\n                                 )}\r\n                                  placeholder=\"Project Name\"\r\n                                  name=\"projectName\"\r\n                                  value= {this.state.projectName}\r\n                                  onChange = {this.onChange}\r\n                              />\r\n                              {errors.projectName && (\r\n                                <div className = \"invalid-feedback\">\r\n                                {errors.projectName}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\" : errors.projectIdentifier\r\n                              })}\r\n                               placeholder=\"Unique Project ID\"\r\n                               name = \"projectIdentifier\"\r\n                               value= {this.state.projectIdentifier}\r\n                                onChange = {this.onChange}\r\n                                   />\r\n                                   {\r\n                                     errorHandler(errors)\r\n                                   }\r\n\r\n\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n\r\n                              <textarea className={classnames(\"form-control form-control-lg\",{\r\n                                \"is-invalid\" : errors.description\r\n                              })}\r\n                               placeholder=\"Project Description\"\r\n                               name = \"description\"\r\n                              value= {this.state.description}\r\n                              onChange = {this.onChange} >\r\n                              </textarea>\r\n                              {errors.description && (\r\n                                <div className = \"invalid-feedback\">\r\n                                {errors.description}\r\n                                </div>\r\n                              )}\r\n\r\n                          </div>\r\n                          <h6>Start Date</h6>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"date\" className=\"form-control form-control-lg\"\r\n                              name = \"start_date\"\r\n                              value= {this.state.start_date}\r\n                              onChange = {this.onChange}\r\n                               />\r\n                          </div>\r\n                          <h6>Estimated End Date</h6>\r\n                          <div className=\"form-group\">\r\n                              <input type=\"date\" className=\"form-control form-control-lg\"\r\n                              name = \"end_date\"\r\n                              value= {this.state.end_date}\r\n                              onChange = {this.onChange}\r\n                              />\r\n                          </div>\r\n\r\n                          <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"\r\n                          />\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  errors : state.errors\r\n})\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {createProject}\r\n) (AddProject);\r\n","import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action){\r\n  switch(action.type){\r\n      case GET_ERRORS :\r\n        return action.payload;\r\n      default:\r\n       return state;\r\n  }\r\n}\r\n","import {GET_PROJECTS,GET_PROJECT,DELETE_PROJECT} from '../actions/types';\r\n\r\nconst initialState ={\r\n  projects : [],\r\n  project :{}\r\n}\r\n\r\n\r\nexport default function(state = initialState,action)  {\r\n        switch(action.type){\r\n           case GET_PROJECTS :\r\n                 return {\r\n                   ...state,\r\n                   projects : action.payload\r\n                 }\r\n          case GET_PROJECT :\r\n                return {\r\n                       ...state,\r\n                       project : action.payload\r\n                }\r\n          case DELETE_PROJECT:\r\n                 return {\r\n                     ...state,\r\n                      projects : state.projects.filter(project =>\r\n                        project.projectIdentifier !== action.payload\r\n                      )\r\n                 }\r\n          default :\r\n           return state;\r\n         }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  projectTasks : [],\r\n  projectTask : {}\r\n}\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    case GET_BACKLOG :\r\n    return {\r\n              ...state,\r\n              projectTasks : action.payload\r\n      }\r\n      case GET_PROJECT_TASK :\r\n      return {\r\n                ...state,\r\n                projectTask : action.payload\r\n        }\r\n      case DELETE_PROJECT_TASK :\r\n      return {\r\n            ...state,\r\n            projectTasks : state.projectTasks.filter(projectTask =>\r\n              projectTask.projectSequence !== action.payload\r\n            )\r\n      }\r\n    default :\r\n    return state;\r\n  }\r\n}\r\n","import {SET_CURRENT_USER} from '../actions/types'\r\n\r\nconst initialState = {\r\n    user : {},\r\n    validToken : false\r\n}\r\nconst booleanValidTokenForPayload = (payload) =>{\r\n  if(payload){\r\n    return true;\r\n  } else {\r\n    return false\r\n  }\r\n}\r\nexport default function(state = initialState, action) {\r\n  switch(action.type  ){\r\n    case SET_CURRENT_USER :\r\n    return{\r\n      ...state,\r\n      validToken : booleanValidTokenForPayload(action.payload),\r\n      user : action.payload\r\n    }\r\n     default :\r\n     return state\r\n  }\r\n}\r\n","  import {combineReducers} from 'redux';\r\n  import errorReducer from './errorReducer'\r\n  import projectReducer from './projectReducer'\r\n  import backlogReducer from './backlogReducer'\r\n  import securityReducer from './securityReducer'\r\n\r\n   export default combineReducers ({\r\n       errors : errorReducer,\r\n       project : projectReducer,\r\n       backlog : backlogReducer,\r\n       security : securityReducer\r\n   });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools ) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n           )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getProject,createProject,updateProject} from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nclass updateProjectComponent extends React.Component {\r\n\r\n  constructor (){\r\n         super();\r\n         this.state = {\r\n           id : \"\",\r\n           projectName: \"\",\r\n           projectIdentifier: \"\",\r\n           description: \"\",\r\n           start_date: \"\",\r\n           end_date: \"\",\r\n           errors : {}\r\n         }\r\n         this.onChange = this.onChange.bind(this);\r\n         this.onSubmit = this.onSubmit.bind(this);\r\n\r\n  }\r\ncomponentWillReceiveProps(nextProps){\r\n      if(nextProps.errors){\r\n        this.setState({errors : nextProps.errors})\r\n      }\r\n  const {\r\n     id,\r\n     projectName,\r\n     projectIdentifier,\r\n     description,\r\n     start_date,\r\n     end_date\r\n  } = nextProps.project;\r\n\r\n  this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n  })\r\n}\r\n  componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e){\r\n     this.setState({[ e.target.name ] : e.target.value });\r\n }\r\n\r\n onSubmit(e){\r\n   e.preventDefault();\r\n   const updateProject = {\r\n     id : this.state.id,\r\n     projectName: this.state.projectName,\r\n     projectIdentifier: this.state.projectIdentifier,\r\n     description: this.state.description,\r\n     start_date:this.state.start_date,\r\n     end_date: this.state.end_date\r\n   };\r\n      this.props.updateProject(updateProject, this.props.history)\r\n }\r\n\r\n  render (){\r\n    const {errors} = this.state;\r\n    return(\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\"> Update Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit = { this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                        <input type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg \",{\r\n                          \"is-invalid\" : errors.projectName\r\n                        })}\r\n                            placeholder=\"Project Name\"\r\n                            name = \"projectName\"\r\n                            value = {this.state.projectName}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {\r\n                              errors.projectName && (\r\n                                <div className = \"invalid-feedback\">\r\n                                   {errors.projectName}\r\n                                </div>\r\n                              )\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control form-control-lg\"\r\n                            placeholder=\"Unique Project ID\"\r\n                            name = \"projectIdentifier\"\r\n                            value = {this.state.projectIdentifier}\r\n                            onChange = {this.onChange}\r\n                                disabled />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                            className={classnames(\"form-control form-control-lg \",{\r\n                              \"is-invalid\" : errors.description\r\n                            })}\r\n                            placeholder=\"Project Description\"\r\n                            name = \"description\"\r\n                            value = {this.state.description}\r\n                            onChange = {this.onChange}\r\n                            >\r\n                            </textarea>\r\n                            {\r\n                              errors.description && (\r\n                                <div className = \"invalid-feedback\">\r\n                                   {errors.description}\r\n                                </div>\r\n                              )\r\n                            }\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\"\r\n                               name=\"start_date\"\r\n                              value = {this.state.start_date}\r\n                               onChange = {this.onChange}\r\n                             />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                 name=\"end_date\"\r\n                                value = {this.state.end_date}\r\n                                 onChange = {this.onChange}\r\n                                 />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  project : state.project.project,\r\n  errors  : state.errors\r\n})\r\n\r\nupdateProjectComponent.propTypes = {\r\n  getProject : PropTypes.func.isRequired,\r\n  createProject : PropTypes.func.isRequired,\r\n  updateProject : PropTypes.func.isRequired,\r\n  project : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n     {getProject, createProject, updateProject}\r\n) (updateProjectComponent);\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {deleteProjectTask} from '../../../actions/backlogActions';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nclass ProjectTask extends React.Component{\r\n\r\n  onDeleteClick = (projectIdentifier,projectSequence) =>{\r\n        this.props.deleteProjectTask(projectIdentifier,projectSequence)\r\n    }\r\n  render () {\r\n\r\n\r\n    const {projectTask} = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n            if(projectTask.priority===1){\r\n               priorityString = \"High\";\r\n               priorityClass = \"bg-danger text-light\";\r\n             }\r\n            if(projectTask.priority===2){\r\n               priorityString = \"Medium\";\r\n               priorityClass = \"bg-warning text-light\";\r\n              }\r\n            if(projectTask.priority===3){\r\n                priorityString = \"Low\";\r\n                priorityClass = \"bg-info text-light\";\r\n               }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n           <div className={`card-header text-primary ${priorityClass }`}>\r\n              ID: {projectTask.projectSequence} --- Priority: {priorityString}\r\n          </div>\r\n          <div className=\"card-body bg-light\">\r\n              <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n              <p className=\"card-text text-truncate \">\r\n                  {projectTask.acceptanceCriteria}\r\n              </p>\r\n              <Link to = {`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\r\n                    className=\"btn btn-primary\">\r\n                  View / Update\r\n              </Link>\r\n               <button className=\"btn btn-danger ml-4\"\r\n                  onClick = {this.onDeleteClick.bind(this,projectTask.projectIdentifier,projectTask.projectSequence)}\r\n                 >\r\n                  Delete\r\n\r\n              </button>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/**\r\nconst mapStateToProps = state =>({\r\n  projectTasks :state.backlog.projectTasks\r\n})\r\n**/\r\nProjectTask.propTypes = {\r\n   deleteProjectTask : PropTypes.func.isRequired\r\n}\r\nexport default connect(\r\n  null,{deleteProjectTask}\r\n)(ProjectTask);\r\n","import axios from 'axios';\r\nimport {ROOT_URL} from '../Config'\r\nimport {\r\n     GET_BACKLOG,GET_ERRORS,GET_PROJECT_TASK,DELETE_PROJECT_TASK\r\n} from './types';\r\n\r\nexport const addProjectTask = (backlog_id ,projectTask, history) => async dispatch =>{\r\n        try{\r\n          await axios.post(`${ROOT_URL}/api/backlog/${backlog_id}`,projectTask)\r\n          history.push(`/projectBoard/${backlog_id}`)\r\n          dispatch({\r\n            type : GET_ERRORS,\r\n            payload : {}\r\n          })\r\n        }\r\n        catch(err){\r\n          dispatch({\r\n            type : GET_ERRORS,\r\n            payload : err.response.data\r\n          })\r\n        }\r\n\r\n}\r\nexport const getBacklog = (backlog_id) => async dispatch =>{\r\n        try{\r\n          const res = await axios.get(`${ROOT_URL}/api/backlog/${backlog_id}`)\r\n          dispatch({\r\n             type : GET_BACKLOG,\r\n             payload : res.data\r\n          })\r\n        }\r\n      catch(err){\r\n        dispatch({\r\n          type : GET_ERRORS,\r\n          payload : err.response.data\r\n        })\r\n      }\r\n}\r\nexport const getProjectTask = (backlog_id,projectSequence, history) => async dispatch =>{\r\n           try{\r\n              const res = await axios.get(`${ROOT_URL}/api/backlog/${backlog_id}/${projectSequence}`)\r\n              dispatch({\r\n                type : GET_PROJECT_TASK,\r\n                payload : res.data\r\n              })\r\n           }catch(err){\r\n             dispatch({\r\n               type : GET_ERRORS,\r\n               payload : err.response.data\r\n             })\r\n           }\r\n}\r\n\r\nexport const updateProjectTaskByProjectSequence = (backlog_id,projectSequence,\r\n  projectTask,history) => async dispatch =>{\r\n          try{\r\n            await axios.patch(`${ROOT_URL}/api/backlog/${backlog_id}/${projectSequence}`, projectTask)\r\n            history.push(`/projectBoard/${backlog_id}`);\r\n            dispatch({\r\n              type : GET_ERRORS,\r\n              payload : {}\r\n            });\r\n          }catch(err){\r\n            dispatch({\r\n              type : GET_ERRORS,\r\n              payload : err.response.data\r\n            })\r\n          }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id,projectSequence) => async dispatch =>{\r\n  if(window.confirm(\r\n    \"Are you sure about this because this will erase all data related to this task\"\r\n  ))\r\n  {\r\n    await axios.delete(`${ROOT_URL}/api/backlog/${backlog_id}/${projectSequence}`)\r\n   dispatch({\r\n     type : DELETE_PROJECT_TASK,\r\n     payload : projectSequence\r\n   })\r\n  }\r\n}\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\nimport ProjectTask from '../ProjectBoard/ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends React.Component{\r\n  render () {\r\n           const {projectTasksProp} = this.props;\r\n           const tasks = projectTasksProp.map(projectTask =>(\r\n             <ProjectTask key = {projectTask.id} projectTask = {projectTask}/>\r\n           ))\r\n           let todoItems = [];\r\n           let inProgressItems = [];\r\n           let doneItems = [];\r\n              for(let i=0; i<tasks.length;i++){\r\n                const status = tasks[i].props.projectTask.status\r\n                if(status === \"DONE\"){\r\n                  doneItems.push(tasks[i]);\r\n                }\r\n                if(status === \"TO_DO\"){\r\n                  todoItems.push(tasks[i]);\r\n                }\r\n                if(status === \"IN_PROGRESS\"){\r\n                  inProgressItems.push(tasks[i]);\r\n                }\r\n              }\r\n          return (\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-secondary text-white\">\r\n                          <h3>TO DO</h3>\r\n                      </div>\r\n                  </div>\r\n\r\n                      {\r\n                        // task will render here\r\n                        todoItems\r\n                      }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-primary text-white\">\r\n                          <h3>In Progress</h3>\r\n                      </div>\r\n                  </div>\r\n                  {\r\n                    inProgressItems\r\n                  }\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-success text-white\">\r\n                          <h3>Done</h3>\r\n                      </div>\r\n                  </div>\r\n                  {\r\n                    doneItems\r\n                  }\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\nimport {getBacklog} from '../../actions/backlogActions';\r\nimport {connect} from 'react-redux'\r\nimport Backlog from './Backlog'\r\n\r\nclass ProjectBoard extends React.Component {\r\n\r\n constructor(){\r\n      super();\r\n        this.state ={\r\n           errors : {}\r\n        }\r\n }\r\n  componentWillMount() {\r\n    const {id} = this.props.match.params;\r\n       this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors){\r\n      this.setState({errors : nextProps.errors})\r\n    }\r\n  }\r\n\r\n  render() {\r\n        const {id} = this.props.match.params;\r\n        const {projectTasks} = this.props\r\n        const {errors} = this.state\r\n\r\n  const errorHandler =(projectTasks,errors)=>{\r\n    if(projectTasks.length<1){\r\n      if(errors.message){\r\n        return(\r\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.message}\r\n              </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n        );\r\n      }\r\n    } else {\r\n      return(\r\n        <Backlog projectTasksProp = {projectTasks}></Backlog>\r\n      )\r\n    }\r\n  }\r\n    return (\r\n      <div className=\"container\">\r\n      <Link to = {`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n        <i className=\"fas fa-plus-circle\">\r\n          Create Project Task</i>\r\n      </Link>\r\n      <br/>\r\n      <hr/>\r\n      {\r\n        errorHandler(projectTasks,errors)//<Backlog projectTasksProp = {projectTasks}></Backlog>\r\n      }\r\n    </div>)\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  projectTasks : state.backlog.projectTasks,\r\n  errors : state.errors\r\n})\r\n\r\nProjectBoard.propTypes = {\r\n  getBacklog: PropTypes.func.isRequired,\r\n  backlog : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired\r\n  //  projectTasks : PropTypes.object.isRequired\r\n}\r\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {addProjectTask} from '../../../actions/backlogActions';\r\nimport classnames from 'classnames'\r\n\r\nclass AddProjectTask extends React.Component {\r\n\r\n  constructor(props){\r\n      super(props);\r\n          const {id} = this.props.match.params;\r\n          this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n            };\r\n          this.onChange = this.onChange.bind(this);\r\n          this.onSubmit = this.onSubmit.bind(this);\r\n        }\r\n\r\n     onChange(e){\r\n         this.setState({ [e.target.name] : e.target.value})\r\n   }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n        const newProjectTask ={\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n     }\r\n      this.props.addProjectTask(this.state.projectIdentifier,newProjectTask,this.props.history);\r\n  }\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors){\r\n        this.setState({errors : nextProps.errors})\r\n      }\r\n}\r\n  render () {\r\n    const {id} = this.props.match.params;\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to = {`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                              \"is-invalid\" : errors.summary\r\n                            }\r\n                          )}\r\n                              name=\"summary\"\r\n                              placeholder=\"Project Task summary\"\r\n                              value = {this.state.summary}\r\n                              onChange = {this.onChange}\r\n                              />\r\n                              {\r\n                                errors.summary && (\r\n                                  <div className=\"invalid-feedback\">\r\n                                    {errors.summary}\r\n                                  </div>\r\n                                )\r\n                              }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\"\r\n                            placeholder=\"Acceptance Criteria\"\r\n                            name=\"acceptanceCriteria\"\r\n                            value = {this.state.acceptanceCriteria}\r\n                            onChange = {this.onChange}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\"\r\n                            name=\"dueDate\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\"\r\n                             name=\"priority\"\r\n                             value = {this.state.priority}\r\n                             onChange = {this.onChange}\r\n                             >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\"\r\n                            name=\"status\" value = {this.state.status}\r\n                            onChange = {this.onChange}\r\n                            >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n    addProjectTask : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n  addProjectTask : state.addProjectTask,\r\n  errors : state.errors\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n{addProjectTask}\r\n)(AddProjectTask)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {getProjectTask , updateProjectTaskByProjectSequence} from '../../../actions/backlogActions';\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nclass UpdateProjectTask extends React.Component {\r\n\r\n    constructor (){\r\n      super();\r\n\r\n      this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors : {}\r\n    };\r\n  this.onChange = this.onChange.bind(this);\r\n  this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n      const {backlog_id, projectSequence} = this.props.match.params;\r\n      this.props.getProjectTask(backlog_id,projectSequence,this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors){\r\n          this.setState({ errors : nextProps.errors })\r\n      }\r\n      const {\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n        create_At\r\n      } = nextProps.projectTask;\r\n\r\n       this.setState({\r\n        id,\r\n        projectSequence,\r\n        summary,\r\n        acceptanceCriteria,\r\n        status,\r\n        priority,\r\n        dueDate,\r\n        projectIdentifier,\r\n        create_At,\r\n      });\r\n    }\r\n    onChange(e){\r\n      this.setState({ [e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit(e){\r\n      e.preventDefault();\r\n      const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n    const {backlog_id, projectSequence} = this.props.match.params;\r\n    this.props.updateProjectTaskByProjectSequence(backlog_id,projectSequence,\r\n      UpdateProjectTask,this.props.history)\r\n    }\r\n  render () {\r\n    const {errors} = this.state\r\n\r\n/**\r\nconst errorHandler = (projectTask, errors) => {\r\n    if (errors.message) {\r\n      return (<div className=\"alert alert-danger text-center\" role=\"alert\">\r\n        {errors.message}\r\n      </div>);\r\n    } else {\r\n      return (<div className=\"alert alert-info text-center\" role=\"alert\">\r\n        No Project Tasks found\r\n      </div>);\r\n    }\r\n}**/\r\n    return (\r\n      <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <Link to = {`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                            Back to Project Board\r\n                        </Link>\r\n                        <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                        <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className= {classnames(\"form-control form-control-lg\",{\r\n                                     \"is-invalid\": errors.summary\r\n                                  })}\r\n                                  name=\"summary\"\r\n                                  placeholder=\"Project Task summary\"\r\n                                  value={this.state.summary}\r\n                                  onChange={this.onChange}\r\n                                  />\r\n                                  {errors.summary && (\r\n                                   <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                      )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea className=\"form-control form-control-lg\"\r\n                                  placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                                  value={this.state.acceptanceCriteria}\r\n                                  onChange={this.onChange}\r\n                                  ></textarea>\r\n                            </div>\r\n                            <h6>Due Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                  name=\"dueDate\"\r\n                                  value = {this.state.dueDate}\r\n                                  onChange={this.onChange}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                                    value = {this.state.priority}\r\n                                    onChange={this.onChange}\r\n                                  >\r\n                                    <option value={0}>Select Priority</option>\r\n                                    <option value={1}>High</option>\r\n                                    <option value={2}>Medium</option>\r\n                                    <option value={3}>Low</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\"\r\n                                   name=\"status\"\r\n                                   value = {this.state.status}\r\n                                   onChange={this.onChange}\r\n                                  >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"TO_DO\">TO DO</option>\r\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                    <option value=\"DONE\">DONE</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n UpdateProjectTask.propTypes = {\r\n      getProjectTask : PropTypes.func.isRequired,\r\n      projectTask : PropTypes.object.isRequired,\r\n      updateProjectTaskByProjectSequence : PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n      errors : state.errors,\r\n      projectTask : state.backlog.projectTask\r\n})\r\nexport default connect(\r\nmapStateToProps,{getProjectTask, updateProjectTaskByProjectSequence}\r\n)(UpdateProjectTask);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\n\r\nclass Landing extends React.Component{\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\")\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <div className=\"landing\">\r\n           <div className=\"light-overlay landing-inner text-dark\">\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12 text-center\">\r\n                           <h1 className=\"display-3 mb-4\">Personal Kanban Tool</h1>\r\n                           <p className=\"lead\">\r\n                               Create your account to join active projects or start you own\r\n                           </p>\r\n                           <hr />\r\n                           <Link to=\"/signUp\" className=\"btn btn-lg btn-primary mr-2\">\r\n                               Sign Up\r\n                           </Link>\r\n                           <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                               Login\r\n                           </Link>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  security : state.security\r\n})\r\nLanding.propTypes = {\r\n  security : PropTypes.object.isRequired\r\n}\r\nexport default connect(\r\n  mapStateToProps\r\n) (Landing);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {login} from '../../actions/userActions'\r\nimport {connect} from 'react-redux';\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Login extends React.Component{\r\n\r\n  constructor (){\r\n    super();\r\n    this.state = {\r\n      username : \"\",\r\n      password : \"\",\r\n      errors: {}\r\n    };\r\n  this.onChange = this.onChange.bind(this);\r\n  this.onSubmit = this.onSubmit.bind(this);\r\n}\r\ncomponentDidMount() {\r\n  if (this.props.security.validToken) {\r\n    this.props.history.push(\"/dashboard\");\r\n  }\r\n}\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\nonChange(e){\r\nthis.setState({ [e.target.name] : e.target.value })\r\n}\r\nonSubmit(e){\r\n  e.preventDefault();\r\n  const loginRequest = {\r\n    username : this.state.username,\r\n    password : this.state.password\r\n  }\r\n  this.props.login(loginRequest);\r\n}\r\n  render () {\r\n    const { errors } = this.state;\r\n    const errorHandler = (errors)=>{\r\n      if(errors.password) {\r\n        return (\r\n          <div className=\"invalid-feedback\">{errors.password}</div>\r\n        )}\r\n        else if(errors.message){\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                  {errors.message}\r\n                </div>\r\n          )\r\n        }\r\n      }\r\n    return (\r\n      <div className=\"login\">\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-md-8 m-auto\">\r\n                          <h1 className=\"display-4 text-center\">Log In</h1>\r\n                          <form onSubmit={this.onSubmit}>\r\n                              <div className=\"form-group\">\r\n                                  <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                        })}\r\n                                  placeholder=\"Username\"\r\n                                  name=\"username\"\r\n                                  value = {this.state.username}\r\n                                  onChange = {this.onChange}\r\n                                  />\r\n                                  {errors.username && (\r\n                                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                              </div>\r\n                              <div className=\"form-group\">\r\n                                  <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                            })}\r\n                                  placeholder=\"Password\"\r\n                                  name=\"password\"\r\n                                  value = {this.state.password}\r\n                                  onChange = {this.onChange}\r\n                                   />\r\n                                   {\r\n                                      errorHandler(errors)}\r\n                              </div>\r\n                              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                          </form>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  errors : state.errors,\r\n  security : state.security\r\n})\r\n\r\nLogin.propTypes = {\r\n  login : PropTypes.func.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n}\r\nexport default connect(\r\n  mapStateToProps,{login}\r\n) (Login);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../actions/userActions'\r\nimport classnames from 'classnames';\r\n\r\nclass SignUp extends React.Component{\r\n  constructor (){\r\n    super();\r\n    this.state = {\r\n      username : \"\",\r\n      emailId  : \"\",\r\n      fullName : \"\",\r\n      password : \"\",\r\n      confirmPassword : \"\",\r\n      errors : {}\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\nonChange(e){\r\n  this.setState({ [e.target.name] : e.target.value })\r\n}\r\ncomponentDidMount() {\r\n  if (this.props.security.validToken) {\r\n    this.props.history.push(\"/dashboard\");\r\n  }\r\n}\r\ncomponentWillReceiveProps(nextProps){\r\n  if(nextProps.errors){\r\n    this.setState({errors : nextProps.errors})\r\n  }\r\n}\r\nonSubmit(e){\r\n  e.preventDefault();\r\n  const newuser = {\r\n    username : this.state.username,\r\n    emailId  : this.state.emailId,\r\n    fullName : this.state.fullName,\r\n    password : this.state.password,\r\n    confirmPassword : this.state.confirmPassword\r\n  }\r\n  this.props.signUp(newuser, this.props.history);\r\n\r\n}\r\n  render () {\r\n    const {errors} = this.state;\r\n    const errorHandler = (errors)=>{\r\n    if(errors.username) {\r\n      return (\r\n        <div className=\"invalid-feedback\">{errors.username}</div>\r\n      )}\r\n      else if(errors.message){\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                {errors.message}\r\n              </div>\r\n        )\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"register\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                        <p className=\"lead text-center\">Create your Account</p>\r\n                        <form onSubmit = {this.onSubmit}>\r\n                          <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                      \"is-invalid\" : errors.username\r\n                            })}\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            value = {this.state.username}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {\r\n                              errorHandler(errors)\r\n                            }\r\n\r\n\r\n                          </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" className={classnames(\"form-control form-control-lg\",{\r\n                             \"is-invalid\" : errors.emailId\r\n                            })}\r\n                            placeholder=\"Email Address\"\r\n                            name=\"emailId\"\r\n                            value = {this.state.emailId}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {errors.emailId && (\r\n                              <div className = \"invalid-feedback\">\r\n                              {errors.emailId}\r\n                              </div>\r\n                            )}\r\n\r\n                        </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                 \"is-invalid\" : errors.fullName\r\n                                })}\r\n                                placeholder=\"fullName\"\r\n                                name=\"fullName\"\r\n                                value = {this.state.fullName}\r\n                                onChange = {this.onChange}\r\n                                 />\r\n                            { errors.fullName && (\r\n                                      <div className = \"invalid-feedback\">\r\n                                      {errors.fullName}\r\n                                      </div>\r\n                                    )}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\r\n                                 \"is-invalid\" : errors.password\r\n                                })}\r\n                                 placeholder=\"Password\"\r\n                                 name=\"password\"\r\n                                 value = {this.state.password}\r\n                                 onChange = {this.onChange}\r\n                                 />\r\n                                 { errors.password && (\r\n                                           <div className = \"invalid-feedback\">\r\n                                           {errors.password}\r\n                                           </div>\r\n                                         )}\r\n\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\r\n                                 \"is-invalid\" : errors.confirmPassword\r\n                                })}\r\n                                   placeholder=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    value = {this.state.confirmPassword}\r\n                                    onChange = {this.onChange}\r\n                                    />\r\n                                    { errors.confirmPassword && (\r\n                                              <div className = \"invalid-feedback\">\r\n                                              {errors.confirmPassword}\r\n                                              </div>\r\n                                            )}\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n  errors : state.errors,\r\n  security : state.security\r\n})\r\n\r\nSignUp.propTypes = {\r\n  signUp : PropTypes.func.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  security :PropTypes.object.isRequired\r\n}\r\nexport default connect(\r\n  mapStateToProps,{signUp}\r\n) (SignUp);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect,Route} from 'react-router-dom'\r\n\r\nconst SecureRoute =({component :Component ,security, ...otherProps})=>(\r\n\r\n  <Route\r\n  {...otherProps} render={props => security.validToken === true ?\r\n     (<Component {...props}/>):\r\n     (<Redirect to =\"/login\"/>)\r\n\r\n   }\r\n   />\r\n)\r\n\r\nconst mapStateToProps = state =>({\r\n  security : state.security\r\n})\r\nSecureRoute.propTypes = {\r\n  security : PropTypes.object.isRequired\r\n}\r\nexport default connect(mapStateToProps)(SecureRoute)\r\n","import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Header/Header'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AddProject from './components/project/AddProject';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store'\r\nimport updateProjectComponent from './components/project/updateProjectComponent';\r\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard.js'\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask'\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask'\r\nimport Landing from './components/Landing/Landing';\r\nimport Login from './components/User/Login';\r\nimport SignUp from './components/User/SignUp';\r\nimport {SET_CURRENT_USER} from './actions/types'\r\nimport setJWTToken from './securityUtils/setJWTToken'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { logout } from \"./actions/userActions\";\r\nimport SecureRoute from './securityUtils/SecureRoute'\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nconst token = localStorage.jwtToken;\r\n   if(token){\r\n     setJWTToken(token);\r\n     const decoded_jwtToken = jwt_decode(token);\r\n     store.dispatch({\r\n       type : SET_CURRENT_USER,\r\n       payload :decoded_jwtToken\r\n     })\r\n\r\n   const currentTime = Date.now()/1000;\r\n\r\n   if(decoded_jwtToken.exp<currentTime){\r\n   store.dispatch(logout());\r\n  window.location.href = \"/\";\r\n   }\r\n    }\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store = {store}>\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Header/>\r\n        {\r\n          //start of unsecure route\r\n        }\r\n        <Route exact path = \"/\" component = {Landing}/>\r\n        <Route exact path = \"/login\" component = {Login}/>\r\n        <Route exact path = \"/signUp\" component = {SignUp}/>\r\n        {\r\n          //start of secure routing\r\n        }\r\n        <Switch>\r\n        <SecureRoute exact path = \"/addProject\" component={AddProject} />\r\n        <SecureRoute exact path = \"/dashboard\" component={Dashboard}/>\r\n        <SecureRoute exact path = \"/updateProject/:id\" component ={updateProjectComponent}/>\r\n        <SecureRoute exact path = '/projectBoard/:id' component = {ProjectBoard} />\r\n        <SecureRoute exact path = '/addProjectTask/:id' component = {AddProjectTask} />\r\n        <SecureRoute exact path = '/updateProjectTask/:backlog_id/:projectSequence' component = {UpdateProjectTask} />\r\n        </Switch>\r\n      </div>\r\n      </Router>\r\n        </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}